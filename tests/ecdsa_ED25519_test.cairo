#[cfg(test)]
mod ecdsa_tests {
    use garaga::ecdsa::*;
    use garaga::ec_ops::{G1PointImpl, G1Point, DerivePointFromXHint, MSMHint, FunctionFelt};

    #[test]
    fn test_ecdsa_ED25519() {
        // Create the core signature
        let signature = ECDSASignature { r: 2640213111119054482632796289292427271858108085326993221302055861052441130814u.into(), s: 2200902486122391027782968832210002051696987838787238392791851433103634640583u.into(), v: 1, px: 8120292664339862129011700080398474732653933309962839195628451502977285533570u.into(), py: 36588119608295142097324746815268677515689793268575766572780446866823391926189u.into(), z: 2222647730719967061822336362451247824785218138944836182665009432498418002526u.into() };

        // Create the MSM hint
        let msm_hint = MSMHint { 
            Q_low: G1Point { x: 5419495224231331845169244680057910889804319560189419372300660711166316131179u.into(), y: 50807932091825703309706659277165916369871806578940104794436554484084367537604u.into() }, 
            Q_high: G1Point { x: 43398483640799625995002899086906850347483244658944288597265309492549990059507u.into(), y: 22626467702921151694615037410934330991730142917884391836207064014311007127699u.into() }, 
            Q_high_shifted: G1Point { x: 19663187881226658523768468762132871199810744754044153640402320475098504866531u.into(), y: 9812307997653378439146259454361329595656372889435329137245162634837780474543u.into() }, 
            RLCSumDlogDiv: FunctionFelt { 
            a_num: array![24265099789367660446584828117384994742999276227732328926571356207359455609390u.into(), 3720031660731856103141798916668539912937690583872570189492994324362281153848u.into()], 
            a_den: array![33787602960273329986116303868247703428373292793723891873703372367939554345380u.into(), 197367504983891381339063591811289925058643482795515389854629088834057973569u.into()], 
            b_num: array![1272513500566634875558273639163226202408067082348814641187866999355696532113u.into(), 51294937771134503344192957617591052872696972491497258616959673581176329560046u.into()], 
            b_den: array![26894686425483835627935060048139713127247895028638395370231078999361879069936u.into(), 48746009548880827585090114347306200789369945361108489594594288861305193219100u.into()] 
        } 
        };

        // Create the DerivePointFromX hint
        let derive_point_hint = DerivePointFromXHint { 
            y_last_attempt: 46351329720338000867579750243986462179862783836636112052867655948448647100954u.into(), 
            g_rhs_sqrt: array![24328562222489219538834992593053778429898717080161729524546619138186456701675u.into(), 37872690378043262493121283933242401287061185071045409841241537104405815780716u.into()] 
        };

        // Create the complete signature with hints
        let ecdsa_with_hints = ECDSASignatureWithHint {
            signature,
            msm_hint,
            msm_derive_hint: derive_point_hint
        };

        // Verify the signature
        let is_valid = is_valid_ecdsa_signature(ecdsa_with_hints, 3);
        assert!(is_valid);
    }
}
